//Raymond@HZHL3 ~/code/go/src/github.com/rhu1/scribble-go-runtime
//$ ~/code/eclipse/scribble/github.com/rhu1-go/scribble-java/bin/scribblec-param.sh test/httpget/HTTPget.scr -d test/httpget/ -param Proto1 -param-api Fetcher

module HTTPget;

type <go> "int" from "..." as int;
type <go> "string" from "..." as string;
type <go> "[]byte" from "..." as bates;

global protocol Proto1(role Fetcher(k), role Master(k), role Server(k)) {
  URL(string) from Master[1..1] to Fetcher[1..k]; // Get URL metadata.
  HEAD(string) from Fetcher[1..k] to Server[1..1];
  //response(string) from Server[1..1] to Fetcher[1..k]; // Metadata including size.
  response(bates) from Server[1..1] to Fetcher[1..k]; // Metadata including size.

  // Setup chunk boundaries.
  FileSize(int) from Fetcher[1..1] to Master[1..1]; // Full file size.
  start(int) from Master[1..1] to Fetcher[1..k]; // byte range start.
  end(int) from Master[1..1] to Fetcher[1..k]; // byte range end.

  // GET chunks
  GET(string) from Fetcher[1..k] to Server[1..1];
  //Response(string) from Server[1..1] to Fetcher[1..k];
  Response(bates) from Server[1..1] to Fetcher[1..k];

  //Body(string) from Server[1..1] to Fetcher[1..k];
  Body(bates) from Server[1..1] to Fetcher[1..k];

  // Merge all chunks
  merge(string) from Fetcher[1..k] to Master[1..1];
}


// Server messages have empty label for interoperability with third-party Server
// Proper fix would be to use Scribble "sig" instead of "type" (cf., Scribble SMTP/HTTP)
global protocol Proto2(role Fetcher(k), role Master(k), role Server(k)) {
  URL(string) from Master[1..1] to Fetcher[1..k];
  (string) from Fetcher[1..k] to Server[1..1];           // HEAD  // FIXME: Fetcher[1..1]?
  (bates) from Server[1..1] to Fetcher[1..k];            // response

  // Setup chunk boundaries.
  FileSize(int) from Fetcher[1..1] to Master[1..1];
  start(int) from Master[1..1] to Fetcher[1..k];
  end(int) from Master[1..1] to Fetcher[1..k];

  // GET chunks
  (string) from Fetcher[1..k] to Server[1..1];           // GET
  (bates) from Server[1..1] to Fetcher[1..k];            // Response

  (bates) from Server[1..1] to Fetcher[1..k];            // Body

  // Merge all chunks
  merge(string) from Fetcher[1..k] to Master[1..1];
}


global protocol Proto3(role Fetcher(k), role Master(k), role Server(k)) {
  (string) from Fetcher[1..1] to Server[1..1];           // HEAD  // FIXME: Fetcher[1..1]?
  (bates) from Server[1..1] to Fetcher[1..1];            // response
  FileSize(int) from Fetcher[1..1] to Master[1..1];

  // Setup chunk boundaries.
  start(int) from Master[1..1] to Fetcher[1..k];
  end(int) from Master[1..1] to Fetcher[1..k];

  // GET chunks
  (string) from Fetcher[1..k] to Server[1..1];           // GET
  (bates) from Server[1..1] to Fetcher[1..k];            // Response
  (bates) from Server[1..1] to Fetcher[1..k];            // Body

  // Merge all chunks
  merge(string) from Fetcher[1..k] to Master[1..1];
}
